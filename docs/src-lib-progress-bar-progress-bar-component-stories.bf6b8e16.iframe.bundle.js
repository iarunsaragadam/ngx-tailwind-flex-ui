(self.webpackChunk_iarunsaragadam_ngx_tailwind_flex_ui=self.webpackChunk_iarunsaragadam_ngx_tailwind_flex_ui||[]).push([[935],{"./libs/ngx-tailwind-flex-ui/src/lib/progress-bar/progress-bar.component.css?ngResource":(module,__unused_webpack_exports,__webpack_require__)=>{var ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/noSourceMaps.js"),___CSS_LOADER_EXPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js")(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);___CSS_LOADER_EXPORT___.push([module.id,"@keyframes indeterminate {\n    0% {\n      left: -100%;\n    }\n    100% {\n      left: 100%;\n    }\n  }\n  \n  @keyframes query {\n    0% {\n      right: -100%;\n    }\n    100% {\n      right: 100%;\n    }\n  }\n\n  @keyframes bufferWave {\n    0% {\n      left: -100%;\n      width: 40%;\n    }\n    50% {\n      left: 50%;\n      width: 60%;\n    }\n    100% {\n      left: 100%;\n      width: 40%;\n    }\n  }\n  \n  .animate-indeterminate {\n    position: absolute;\n    left: -100%;\n    width: 40%;\n    animation: indeterminate 1.5s infinite linear;\n  }\n  \n  .animate-query {\n    position: absolute;\n    right: -100%;\n    width: 40%;\n    animation: query 1.5s infinite linear;\n  }\n\n  .buffer-wave {\n    position: absolute;\n    left: -100%;\n    height: 100%;\n    width: 40%;\n    background: linear-gradient(to right, rgba(0, 0, 0, 0.1), rgba(255, 255, 255, 0.3));\n    animation: bufferWave 2s infinite ease-in-out;\n  }\n\n  \n  ",""]),module.exports=___CSS_LOADER_EXPORT___.toString()},"./libs/ngx-tailwind-flex-ui/src/lib/progress-bar/progress-bar.component.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{CustomStyled:()=>CustomStyled,Default:()=>Default,GreenBuffer:()=>GreenBuffer,GreenProgress:()=>GreenProgress,RedIndeterminate:()=>RedIndeterminate,__namedExportsOrder:()=>__namedExportsOrder,default:()=>progress_bar_component_stories});var tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.mjs");var progress_bar_componentngResource=__webpack_require__("./libs/ngx-tailwind-flex-ui/src/lib/progress-bar/progress-bar.component.css?ngResource"),progress_bar_componentngResource_default=__webpack_require__.n(progress_bar_componentngResource),common=__webpack_require__("./node_modules/@angular/common/fesm2022/common.mjs"),core=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs");let ProgressBarComponent=class ProgressBarComponent{variant="determinate";progress=80;bufferProgress=100;color="primary";class="";colorMap={primary:"bg-blue-500",secondary:"bg-yellow-500",success:"bg-green-500",error:"bg-red-500"};get progressBarClass(){return this.colorMap[this.color]||"bg-blue-500"}static propDecorators={variant:[{type:core.Input}],progress:[{type:core.Input}],bufferProgress:[{type:core.Input}],color:[{type:core.Input}],class:[{type:core.Input}],progressBarClass:[{type:core.HostBinding,args:["class"]}]}};ProgressBarComponent=(0,tslib_es6.Cg)([(0,core.Component)({selector:"lib-progress-bar",template:'<div class="w-full bg-gray-200 rounded-full h-4 overflow-hidden relative">\n\n  \x3c!-- Determinate & Buffer Primary Progress --\x3e\n  <div\n    *ngIf="variant === \'determinate\' || variant === \'buffer\'"\n    class="h-full transition-all duration-300"\n    [ngClass]="progressBarClass"\n    [style.width.%]="progress"\n    role="progressbar"\n    [attr.aria-valuenow]="progress"\n    aria-valuemin="0"\n    aria-valuemax="100"\n  ></div>\n\n  \x3c!-- Indeterminate Animation --\x3e\n  <div\n    *ngIf="variant === \'indeterminate\'"\n    class="absolute top-0 left-0 h-full w-full overflow-hidden"\n  >\n    <div\n      class="h-full w-1/3 animate-indeterminate"\n      [ngClass]="progressBarClass"\n    ></div>\n  </div>\n\n  \x3c!-- Query Mode (Reversed Indeterminate) --\x3e\n  <div\n    *ngIf="variant === \'query\'"\n    class="absolute top-0 left-0 h-full w-full overflow-hidden"\n  >\n    <div\n      class="h-full w-1/3 animate-query"\n      [ngClass]="progressBarClass"\n    ></div>\n  </div>\n\n  \x3c!-- Buffer Secondary Progress --\x3e\n  \x3c!-- Buffer Secondary Progress Background --\x3e\n<div\n*ngIf="variant === \'buffer\'"\nclass="absolute top-0 left-0 h-full bg-gray-300 opacity-50"\n[style.width.%]="bufferProgress"\n></div>\n\n\x3c!-- Buffer Animation Overlay --\x3e\n<div\n*ngIf="variant === \'buffer\'"\nclass="absolute top-0 left-0 h-full w-full overflow-hidden"\n>\n<div class="buffer-wave"></div>\n</div>\n\n\n</div>\n',imports:[common.CommonModule],styles:[progress_bar_componentngResource_default()]})],ProgressBarComponent);const progress_bar_component_stories={title:"Components/Progress Bar",component:ProgressBarComponent,tags:["autodocs"],argTypes:{progress:{control:{type:"range",min:0,max:100,step:1},description:"Progress percentage (0 to 100)"},color:{control:"select",options:["primary","secondary","success","error"],description:"Color of the progress bar"},variant:{control:"select",options:["determinate","indeterminate","buffer","query"],description:"Progress bar type"}}},Default={args:{progress:25,color:"primary",variant:"determinate",bufferProgress:0},render:args=>({props:args,template:'<lib-progress-bar [progress]="progress" [color]="color" [variant]="variant"></lib-progress-bar>'})},GreenProgress={args:{progress:70,color:"success",variant:"determinate"},render:args=>({props:args,template:'<lib-progress-bar [progress]="progress" [color]="color" [variant]="variant"></lib-progress-bar>'})},GreenBuffer={args:{progress:40,bufferProgress:5,color:"success",variant:"buffer"},render:args=>({props:args,template:'<lib-progress-bar [progress]="progress" [buffer]="buffer" [color]="color" [variant]="variant"></lib-progress-bar>'})},RedIndeterminate={args:{color:"error",variant:"indeterminate"},render:args=>({props:args,template:'<lib-progress-bar [color]="color" [variant]="variant"></lib-progress-bar>'})},CustomStyled={args:{progress:60,color:"primary",variant:"determinate",class:"h-6 rounded-lg"},render:args=>({props:args,template:'<lib-progress-bar [progress]="progress" [color]="color" [variant]="variant" [class]="class"></lib-progress-bar>'})},__namedExportsOrder=["Default","GreenProgress","GreenBuffer","RedIndeterminate","CustomStyled"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:'{\n  args: {\n    progress: 25,\n    color: "primary",\n    variant: \'determinate\',\n    bufferProgress: 0\n  },\n  render: args => ({\n    props: args,\n    template: `<lib-progress-bar [progress]="progress" [color]="color" [variant]="variant"></lib-progress-bar>`\n  })\n}',...Default.parameters?.docs?.source}}},GreenProgress.parameters={...GreenProgress.parameters,docs:{...GreenProgress.parameters?.docs,source:{originalSource:'{\n  args: {\n    progress: 70,\n    color: \'success\',\n    variant: \'determinate\'\n  },\n  render: args => ({\n    props: args,\n    template: `<lib-progress-bar [progress]="progress" [color]="color" [variant]="variant"></lib-progress-bar>`\n  })\n}',...GreenProgress.parameters?.docs?.source}}},GreenBuffer.parameters={...GreenBuffer.parameters,docs:{...GreenBuffer.parameters?.docs,source:{originalSource:'{\n  args: {\n    progress: 40,\n    bufferProgress: 5,\n    color: \'success\',\n    variant: \'buffer\'\n  },\n  render: args => ({\n    props: args,\n    template: `<lib-progress-bar [progress]="progress" [buffer]="buffer" [color]="color" [variant]="variant"></lib-progress-bar>`\n  })\n}',...GreenBuffer.parameters?.docs?.source}}},RedIndeterminate.parameters={...RedIndeterminate.parameters,docs:{...RedIndeterminate.parameters?.docs,source:{originalSource:"{\n  args: {\n    color: 'error',\n    variant: 'indeterminate'\n  },\n  render: args => ({\n    props: args,\n    template: `<lib-progress-bar [color]=\"color\" [variant]=\"variant\"></lib-progress-bar>`\n  })\n}",...RedIndeterminate.parameters?.docs?.source}}},CustomStyled.parameters={...CustomStyled.parameters,docs:{...CustomStyled.parameters?.docs,source:{originalSource:'{\n  args: {\n    progress: 60,\n    color: \'primary\',\n    variant: \'determinate\',\n    class: \'h-6 rounded-lg\'\n  },\n  render: args => ({\n    props: args,\n    template: `<lib-progress-bar [progress]="progress" [color]="color" [variant]="variant" [class]="class"></lib-progress-bar>`\n  })\n}',...CustomStyled.parameters?.docs?.source}}}},"./node_modules/css-loader/dist/runtime/api.js":module=>{"use strict";module.exports=function(cssWithMappingToString){var list=[];return list.toString=function toString(){return this.map((function(item){var content="",needLayer=void 0!==item[5];return item[4]&&(content+="@supports (".concat(item[4],") {")),item[2]&&(content+="@media ".concat(item[2]," {")),needLayer&&(content+="@layer".concat(item[5].length>0?" ".concat(item[5]):""," {")),content+=cssWithMappingToString(item),needLayer&&(content+="}"),item[2]&&(content+="}"),item[4]&&(content+="}"),content})).join("")},list.i=function i(modules,media,dedupe,supports,layer){"string"==typeof modules&&(modules=[[null,modules,void 0]]);var alreadyImportedModules={};if(dedupe)for(var k=0;k<this.length;k++){var id=this[k][0];null!=id&&(alreadyImportedModules[id]=!0)}for(var _k=0;_k<modules.length;_k++){var item=[].concat(modules[_k]);dedupe&&alreadyImportedModules[item[0]]||(void 0!==layer&&(void 0===item[5]||(item[1]="@layer".concat(item[5].length>0?" ".concat(item[5]):""," {").concat(item[1],"}")),item[5]=layer),media&&(item[2]?(item[1]="@media ".concat(item[2]," {").concat(item[1],"}"),item[2]=media):item[2]=media),supports&&(item[4]?(item[1]="@supports (".concat(item[4],") {").concat(item[1],"}"),item[4]=supports):item[4]="".concat(supports)),list.push(item))}},list}},"./node_modules/css-loader/dist/runtime/noSourceMaps.js":module=>{"use strict";module.exports=function(i){return i[1]}}}]);